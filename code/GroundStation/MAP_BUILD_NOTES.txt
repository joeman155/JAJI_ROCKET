Summary
-----------
Shows information on how I set-up configured the map system

It is probably a VERY good idea to:-
* Load the maps into a plsql DB on a FAST system...
* export the loaded DB to a dump file
* Import into a slow system.

This is bcause running osmosis and osm2pgsql on slow Rasberry-Pi 2 Model B is painful
and it might damage microSD....too many writes...possibly.

OS Deps
--------
Log on as user root

apt-get install postgresql postgresql-contrib

apt-get install osm2pgsql 



Downloading the map (Done on a fast machine)
---------------------
Went to:-

http://download.geofabrik.de/

When to "Australia and Oceana" -> Australia 

Download


wget http://download.geofabrik.de/australia-oceania/australia-latest.osm.bz2

bunzip2 australia-latest.osm.bz2



Extracting a 'region' of Australia map for load
--------------

apt-get install osmosis

Create a file called east.poly .... to get most of the Eastern states 

osmosis --read-xml file="australia-latest.osm" --bounding-polygon file="east.poly" \
        --write-xml file="east.australia-latest.osm"


bzip2 east.australia-latest.osm


or

Create a file called east.poly .... to get mostly the state of Queensland

osmosis --read-xml file="australia-latest.osm" --bounding-polygon file="qld.poly" \
        --write-xml file="qld.australia-latest.osm"


bzip2 qld.australia-latest.osm


NOTE: Sample scripts and poly files are in the maps directory



Creating database gis to hold MAP data
---------------
(These are steps I ran on 'fast' machine where I later use osm2pgsql)

Log on as user root

su - postgres

createdb gis

createlang plpgsql gis                                         


cd /usr/share/postgresql/9.1/contrib/postgis-1.5/
psql -d gis -f postgis.sql                                            

cd /usr/share/postgresql/9.1/contrib
psql -d gis -f postgis_comments.sql                                   

psql -d gis 
create extension hstore;

control-d

cd /usr/share/postgresql/9.1/contrib/postgis-1.5
psql -d gis -f spatial_ref_sys.sql  





Loading osm map into Postgres database gis
------------------
(These are steps I run on fast machine)

I do these steps as UNIX user postgres.

Here is an example of loading QLD map

cd /data/maps/
osm2pgsql qld.australia-latest.osm.bz2 -d gis -U postgres -P 5432 \
          -S /usr/share/osm2pgsql/default.style --hstore



Exporting and Transferring Postgres database to slower system
------------
On fast source system, type:-


pg_dump gis > /tmp/gis.dmp

Transfer file /tmp/gis.dmp to slow system


Importing MAP into gis database on slow system
---------------------
Create GIS database as follows:-

Log on as user postgres and run the commands below:-

createuser pi   # answer yes for superuser

createdb -E UTF8 -O pi gis

createlang plpgsql gis

psql -U pi -d gis

create extension hstore;

Press control-d to exit


Log in as user pi.

Then import database:-

psql -U pi -d gis < gis.dmp


Configure Postgres Access
---------------
On the Rasberry-Pi as the user root, open 

/etc/postgresql/9.1/main/pg_hba.conf

Add the line:-

local   gis             pi                                      trust


service postgresql restart



Installing Renderer INIT script
-------------------------------
As user root on Rasberry-Pi
cp /data/src/mod_tile/debian/renderd.init /etc/init.d/

vi /etc/init.d/renderd.init

and make following changes:-

DAEMON=/usr/bin/$NAME

to

DAEMON=/usr/local/bin/$NAME

RUNASUSER=www-data

to
 
RUNASUSER=pi

Save and exit

chmod a+x /etc/init.d/renderd.init

chkconfig renderd.init on


/etc/init.d/renderd.init start


!!!!
That should be it!
!!!!!



APPENDIX A - Loading standard OpenStreetMap Style.
---------------
The above assumed we want to use OSMBright style....which I found to be quite bad.
(The OSMBright Style install is documented in BUILD_NOTES.txt)

BUILD_NOTES.txt detail steps for installing the OpenStreetMap Carto Style. Below are notes
on the adjustments you need to make if you wish to use this style....

Load into DB using openstreetmap-carto.style

osm2pgsql qld.australia-latest.osm.bz2 -d gis -U postgres -P 5432 \
          -S openstreetmap-carto.style --hstore

(You'll need to get openstreetmap-carto.style over to server where running osm2pgsql...if doing 
 load on a faster machine)


Then extract database dump as per usual steps above...and load into Rasberry-Pi System.

NOTE: You can remove the old database, by first running:-

dropdb gis

as the UNIX user postgres
